{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 10, "column": 0}, "map": {"version":3,"sources":["file:///Users/Anusha/Documents/Collectbot/imp/prima-erp/frontend/lib/calculations.js"],"sourcesContent":["/**\n * Utility functions for invoice calculations and GST handling\n * Based on Prima Sales & Marketing requirements\n */\n\nimport { v4 as uuidv4 } from \"uuid\";\n\n// Product definitions with exact rates and GST from document\n// Note: These are fallback values only. Products should be stored in database with HSN codes.\nexport const PRODUCTS = {\n  dosa: { name: \"dosa\", rate: 25, gstRate: 5, unit: \"packet\" },\n  idli: { name: \"idli\", rate: 20, gstRate: 5, unit: \"packet\" },\n  chapati: { name: \"chapati\", rate: 30, gstRate: 5, unit: \"packet\" },\n  parata: { name: \"parata\", rate: 35, gstRate: 5, unit: \"packet\" },\n  paneer: { name: \"paneer\", rate: 300, gstRate: 12, unit: \"kg\" },\n  \"green peas\": { name: \"green peas\", rate: 80, gstRate: 5, unit: \"kg\" },\n  // Add capitalized versions for compatibility\n  Dosa: { name: \"Dosa\", rate: 25, gstRate: 5, unit: \"packet\" },\n  Idli: { name: \"Idli\", rate: 20, gstRate: 5, unit: \"packet\" },\n  Chapati: { name: \"Chapati\", rate: 30, gstRate: 5, unit: \"packet\" },\n  Parata: { name: \"Parata\", rate: 35, gstRate: 5, unit: \"packet\" },\n  Paneer: { name: \"Paneer\", rate: 300, gstRate: 12, unit: \"kg\" },\n  \"Green peas\": { name: \"Green peas\", rate: 80, gstRate: 5, unit: \"kg\" },\n};\n\n/**\n * Get product details by name (case-insensitive)\n * @param {string} productName - Product name\n * @returns {object} Product details\n */\nexport function getProductDetails(productName) {\n  if (!productName) return null;\n\n  // First try exact match\n  if (PRODUCTS[productName]) {\n    return PRODUCTS[productName];\n  }\n\n  // Then try case-insensitive match\n  const lowerProductName = productName.toLowerCase();\n  for (const [key, product] of Object.entries(PRODUCTS)) {\n    if (key.toLowerCase() === lowerProductName) {\n      return product;\n    }\n  }\n\n  return null;\n}\n\n/**\n * Calculate GST amount for a given amount and rate\n * @param {number} amount - Taxable amount\n * @param {number} gstRate - GST rate (0, 5, 12, 18, 28)\n * @returns {number} GST amount\n */\nexport function calculateGST(amount, gstRate) {\n  if (amount < 0 || gstRate < 0) return 0;\n  return Math.round(amount * (gstRate / 100) * 100) / 100;\n}\n\n/**\n * Calculate total amount including GST\n * @param {number} amount - Base amount\n * @param {number} gstRate - GST rate\n * @returns {number} Total amount with GST\n */\nexport function calculateTotalWithGST(amount, gstRate) {\n  const gstAmount = calculateGST(amount, gstRate);\n  return Math.round((amount + gstAmount) * 100) / 100;\n}\n\n/**\n * Calculate item totals for Prima Sales requirements\n * @param {string|object} product - Product name or product object from database\n * @param {number} qty - Quantity\n * @param {number} rate - Rate per unit (optional, will use default if not provided)\n * @param {Date} expiryDate - Expiry date\n * @returns {object} Item calculations\n */\nexport function calculateItemTotals(\n  product,\n  qty,\n  rate = null,\n  expiryDate = null\n) {\n  let productDetails = null;\n\n  // If product is an object (from database), use it directly\n  if (typeof product === \"object\" && product !== null) {\n    productDetails = {\n      name: product.name,\n      rate: product.rate,\n      gstRate: product.gstRate,\n      unit: product.unit,\n      hsnCode: product.hsnCode,\n    };\n  } else {\n    // If product is a string, try to get from hardcoded PRODUCTS\n    productDetails = getProductDetails(product);\n  }\n\n  if (!productDetails) {\n    throw new Error(`Invalid product: ${product}`);\n  }\n\n  const actualRate = rate || productDetails.rate;\n  const taxableValue = Math.round(qty * actualRate * 100) / 100;\n  const gst = calculateGST(taxableValue, productDetails.gstRate);\n  const invoiceValue = Math.round((taxableValue + gst) * 100) / 100;\n\n  return {\n    product: typeof product === \"string\" ? product : product.name,\n    expiryDate: expiryDate || new Date(),\n    qty: qty,\n    rate: actualRate,\n    taxableValue: taxableValue,\n    gst: gst,\n    invoiceValue: invoiceValue,\n    gstRate: productDetails.gstRate,\n    unit: productDetails.unit,\n    hsnCode: productDetails.hsnCode,\n  };\n}\n\n/**\n * Calculate invoice totals from items\n * @param {Array} items - Array of invoice items\n * @param {number} discount - Discount percentage (default 5%)\n * @returns {object} Invoice calculations\n */\nexport function calculateInvoiceTotals(items, discount = 5) {\n  let totalInvoiceValue = 0;\n\n  items.forEach((item) => {\n    totalInvoiceValue += item.invoiceValue || 0;\n  });\n\n  const discountAmount =\n    Math.round(totalInvoiceValue * (discount / 100) * 100) / 100;\n  const total = Math.round((totalInvoiceValue - discountAmount) * 100) / 100;\n\n  return {\n    totalInvoiceValue: Math.round(totalInvoiceValue * 100) / 100,\n    discount: discountAmount,\n    total: total,\n  };\n}\n\n/**\n * Get GST breakdown by rate\n * @param {Array} items - Array of invoice items\n * @returns {object} GST breakdown by rate\n */\nexport function getGSTBreakdown(items) {\n  const gstBreakdown = {};\n\n  items.forEach((item) => {\n    const rate = item.gstRate || 0;\n    if (!gstBreakdown[rate]) {\n      gstBreakdown[rate] = {\n        taxableAmount: 0,\n        gstAmount: 0,\n      };\n    }\n    gstBreakdown[rate].taxableAmount += item.taxableValue || 0;\n    gstBreakdown[rate].gstAmount += item.gst || 0;\n  });\n\n  // Round all values\n  Object.keys(gstBreakdown).forEach((rate) => {\n    gstBreakdown[rate].taxableAmount =\n      Math.round(gstBreakdown[rate].taxableAmount * 100) / 100;\n    gstBreakdown[rate].gstAmount =\n      Math.round(gstBreakdown[rate].gstAmount * 100) / 100;\n  });\n\n  return gstBreakdown;\n}\n\n/**\n * Generate unique invoice number using UUID\n * @param {string} companyCode - Company code\n * @param {Date} date - Invoice date\n * @returns {string} Unique invoice number with UUID\n */\nexport function generateUniqueInvoiceNumber(companyCode, date = new Date()) {\n  const year = date.getFullYear();\n  const month = String(date.getMonth() + 1).padStart(2, \"0\");\n  const day = String(date.getDate()).padStart(2, \"0\");\n  const dateStr = `${year}-${month}-${day}`;\n\n  // Generate a short UUID (first 8 characters)\n  const shortUuid = uuidv4().replace(/-/g, \"\").substring(0, 8).toUpperCase();\n\n  // Format: PSM-2025-01-27-ABC12345\n  return `${companyCode}-${dateStr}-${shortUuid}`;\n}\n\n/**\n * Generate invoice number by company (legacy function for backward compatibility)\n * @param {string} companyCode - Company code (PRIMA-SM, PRIMA-FT, etc.)\n * @param {Date} date - Invoice date\n * @param {number} sequence - Sequence number for the day\n * @returns {string} Generated invoice number\n */\nexport function generateInvoiceNumber(\n  companyCode,\n  date = new Date(),\n  sequence = 1\n) {\n  const year = date.getFullYear();\n  const month = String(date.getMonth() + 1).padStart(2, \"0\");\n  const day = String(date.getDate()).padStart(2, \"0\");\n  const seq = String(sequence).padStart(3, \"0\");\n\n  // Format: PSM-2025-08-26-001\n  return `${companyCode}-${year}-${month}-${day}-${seq}`;\n}\n\n/**\n * Format number with commas\n * @param {number} number - Number to format\n * @returns {string} Formatted number string\n */\nexport function formatNumber(number) {\n  return new Intl.NumberFormat(\"en-IN\").format(number);\n}\n\n/**\n * Validate GST rate\n * @param {number} rate - GST rate to validate\n * @returns {boolean} True if valid\n */\nexport function isValidGSTRate(rate) {\n  return [0, 5, 12, 18, 28].includes(rate);\n}\n\n/**\n * Validate HSN code format\n * @param {string} hsnCode - HSN code to validate\n * @returns {boolean} True if valid\n */\nexport function isValidHSNCode(hsnCode) {\n  return /^\\d{4,8}$/.test(hsnCode);\n}\n\n/**\n * Validate GST number format\n * @param {string} gstNumber - GST number to validate\n * @returns {boolean} True if valid\n */\nexport function isValidGSTNumber(gstNumber) {\n  if (!gstNumber) return true; // Optional field\n  return /^[0-9]{2}[A-Z]{5}[0-9]{4}[A-Z]{1}[1-9A-Z]{1}Z[0-9A-Z]{1}$/.test(\n    gstNumber\n  );\n}\n\n/**\n * Calculate CGST and SGST (for intrastate transactions)\n * @param {number} gstAmount - Total GST amount\n * @returns {object} CGST and SGST amounts\n */\nexport function calculateCGSTSGST(gstAmount) {\n  const halfGST = gstAmount / 2;\n  return {\n    cgst: Math.round(halfGST * 100) / 100,\n    sgst: Math.round(halfGST * 100) / 100,\n  };\n}\n\n/**\n * Calculate IGST (for interstate transactions)\n * @param {number} gstAmount - Total GST amount\n * @returns {number} IGST amount\n */\nexport function calculateIGST(gstAmount) {\n  return Math.round(gstAmount * 100) / 100;\n}\n\n/**\n * Validate invoice data for Prima Sales requirements\n * @param {object} invoiceData - Invoice data to validate\n * @returns {object} Validation result\n */\nexport function validateInvoiceData(invoiceData) {\n  const errors = [];\n\n  // Validate required fields\n  if (!invoiceData.customerName) {\n    errors.push(\"Customer name is required\");\n  }\n\n  if (!invoiceData.items || invoiceData.items.length === 0) {\n    errors.push(\"At least one item is required\");\n  }\n\n  // Validate items\n  if (invoiceData.items) {\n    invoiceData.items.forEach((item, index) => {\n      if (!item.product) {\n        errors.push(`Item ${index + 1}: Product is required`);\n      }\n      if (!PRODUCTS[item.product]) {\n        errors.push(`Item ${index + 1}: Invalid product \"${item.product}\"`);\n      }\n      if (!item.qty || item.qty <= 0) {\n        errors.push(`Item ${index + 1}: Quantity must be greater than 0`);\n      }\n      if (!item.expiryDate) {\n        errors.push(`Item ${index + 1}: Expiry date is required`);\n      }\n    });\n  }\n\n  // Validate discount\n  if (\n    invoiceData.discount &&\n    (invoiceData.discount < 0 || invoiceData.discount > 100)\n  ) {\n    errors.push(\"Discount must be between 0 and 100 percent\");\n  }\n\n  return {\n    isValid: errors.length === 0,\n    errors,\n  };\n}\n\n/**\n * Get all available products for dropdown\n * @returns {Array} Array of product objects for dropdown\n */\nexport function getProductOptions() {\n  return Object.entries(PRODUCTS).map(([key, product]) => ({\n    value: key,\n    label: `${product.name} - ₹${product.rate}/${product.unit}`,\n    ...product,\n  }));\n}\n\n/**\n * Calculate purchase totals for Prima Sales requirements\n * @param {string|object} product - Product name or product object from database\n * @param {number} qty - Quantity\n * @param {number} rate - Purchase rate per unit\n * @param {number} discount - Discount amount (default 0)\n * @returns {object} Purchase calculations\n */\nexport function calculatePurchaseTotals(product, qty, rate, discount = 0) {\n  let productDetails = null;\n\n  // If product is an object (from database), use it directly\n  if (typeof product === \"object\" && product !== null) {\n    productDetails = {\n      name: product.name,\n      rate: product.rate,\n      gstRate: product.gstRate,\n      unit: product.unit,\n      hsnCode: product.hsnCode,\n    };\n  } else {\n    // If product is a string, try to get from hardcoded PRODUCTS\n    productDetails = getProductDetails(product);\n  }\n\n  if (!productDetails) {\n    throw new Error(`Invalid product: ${product}`);\n  }\n\n  const taxableValue = Math.round(qty * rate * 100) / 100;\n  const gst = calculateGST(taxableValue, productDetails.gstRate);\n  const invoiceValue = Math.round((taxableValue + gst) * 100) / 100;\n  const total = Math.round((invoiceValue - discount) * 100) / 100;\n\n  return {\n    taxableValue,\n    gst,\n    invoiceValue,\n    total,\n    gstRate: productDetails.gstRate,\n    unit: productDetails.unit,\n    hsnCode: productDetails.hsnCode,\n  };\n}\n\n/**\n * Get product GST rate\n * @param {string|object} product - Product name or product object from database\n * @returns {number} GST rate\n */\nexport function getProductGSTRate(product) {\n  let productDetails = null;\n\n  // If product is an object (from database), use it directly\n  if (typeof product === \"object\" && product !== null) {\n    return product.gstRate || 0;\n  } else {\n    // If product is a string, try to get from hardcoded PRODUCTS\n    productDetails = getProductDetails(product);\n    return productDetails ? productDetails.gstRate : 0;\n  }\n}\n\n/**\n * Generate unique purchase number using UUID\n * @param {Date} date - Purchase date\n * @returns {string} Unique purchase number with UUID\n */\nexport function generatePurchaseNumber(date = new Date()) {\n  const year = date.getFullYear();\n  const month = String(date.getMonth() + 1).padStart(2, \"0\");\n  const day = String(date.getDate()).padStart(2, \"0\");\n  const dateStr = `${year}-${month}-${day}`;\n\n  // Generate a short UUID (first 8 characters)\n  const shortUuid = uuidv4().replace(/-/g, \"\").substring(0, 8).toUpperCase();\n\n  // Format: PUR-2025-08-26-A1B2C3D4\n  return `PUR-${dateStr}-${shortUuid}`;\n}\n\n/**\n * Generate vendor code\n * @returns {string} Generated vendor code\n */\nexport function generateVendorCode() {\n  const timestamp = Date.now().toString().slice(-6);\n  const random = Math.floor(Math.random() * 1000)\n    .toString()\n    .padStart(3, \"0\");\n  return `VEND${timestamp}${random}`;\n}\n\n/**\n * Validate purchase data\n * @param {object} purchaseData - Purchase data to validate\n * @returns {object} Validation result\n */\nexport function validatePurchaseData(purchaseData) {\n  const errors = [];\n\n  // Validate required fields\n  if (!purchaseData.vendorName) {\n    errors.push(\"Vendor name is required\");\n  }\n\n  // Supplier invoice fields are optional for now\n  // if (!purchaseData.supplierInvoiceNumber) {\n  //   errors.push(\"Supplier invoice number is required\");\n  // }\n\n  // if (!purchaseData.supplierInvoiceDate) {\n  //   errors.push(\"Supplier invoice date is required\");\n  // }\n\n  if (!purchaseData.items || purchaseData.items.length === 0) {\n    errors.push(\"At least one item is required\");\n  }\n\n  // Validate items\n  if (purchaseData.items) {\n    purchaseData.items.forEach((item, index) => {\n      if (!item.product) {\n        errors.push(`Item ${index + 1}: Product is required`);\n      }\n      const productDetails = getProductDetails(item.product);\n      if (!productDetails) {\n        errors.push(`Item ${index + 1}: Invalid product \"${item.product}\"`);\n      }\n      if (!item.qty || item.qty <= 0) {\n        errors.push(`Item ${index + 1}: Quantity must be greater than 0`);\n      }\n      if (!item.rate || item.rate <= 0) {\n        errors.push(`Item ${index + 1}: Rate must be greater than 0`);\n      }\n      if (!item.unit) {\n        errors.push(`Item ${index + 1}: Unit is required`);\n      }\n      if (!item.expiryDate) {\n        errors.push(`Item ${index + 1}: Expiry date is required`);\n      }\n    });\n  }\n\n  // Validate discount\n  if (purchaseData.discount && purchaseData.discount < 0) {\n    errors.push(\"Discount cannot be negative\");\n  }\n\n  return {\n    isValid: errors.length === 0,\n    errors,\n  };\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 427, "column": 0}, "map": {"version":3,"sources":["file:///Users/Anusha/Documents/Collectbot/imp/prima-erp/frontend/components/ui/Button.jsx"],"sourcesContent":["import React from \"react\";\nimport Link from \"next/link\";\n\nconst Button = ({\n  children,\n  variant = \"primary\",\n  size = \"md\",\n  disabled = false,\n  loading = false,\n  href,\n  onClick,\n  type = \"button\",\n  className = \"\",\n  icon,\n  iconPosition = \"left\",\n  fullWidth = false,\n  ...props\n}) => {\n  const baseClasses = \"inline-flex items-center justify-center font-medium rounded-lg transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed\";\n  \n  const variants = {\n    primary: \"bg-blue-600 hover:bg-blue-700 text-white focus:ring-blue-500\",\n    secondary: \"bg-gray-600 hover:bg-gray-700 text-white focus:ring-gray-500\",\n    success: \"bg-green-600 hover:bg-green-700 text-white focus:ring-green-500\",\n    danger: \"bg-red-600 hover:bg-red-700 text-white focus:ring-red-500\",\n    warning: \"bg-yellow-600 hover:bg-yellow-700 text-white focus:ring-yellow-500\",\n    info: \"bg-blue-500 hover:bg-blue-600 text-white focus:ring-blue-400\",\n    outline: \"border border-gray-300 bg-white hover:bg-gray-50 text-gray-700 focus:ring-gray-500\",\n    ghost: \"bg-transparent hover:bg-gray-100 text-gray-700 focus:ring-gray-500\",\n  };\n\n  const sizes = {\n    xs: \"px-2 py-1 text-xs\",\n    sm: \"px-3 py-1.5 text-sm\",\n    md: \"px-4 py-2 text-sm\",\n    lg: \"px-6 py-3 text-base\",\n    xl: \"px-8 py-4 text-lg\",\n  };\n\n  const classes = [\n    baseClasses,\n    variants[variant],\n    sizes[size],\n    fullWidth ? \"w-full\" : \"\",\n    className,\n  ].filter(Boolean).join(\" \");\n\n  const content = (\n    <>\n      {loading && (\n        <svg className=\"animate-spin -ml-1 mr-2 h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\">\n          <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\" />\n          <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\" />\n        </svg>\n      )}\n      {!loading && icon && iconPosition === \"left\" && (\n        <span className=\"mr-2\">{icon}</span>\n      )}\n      {children}\n      {!loading && icon && iconPosition === \"right\" && (\n        <span className=\"ml-2\">{icon}</span>\n      )}\n    </>\n  );\n\n  if (href) {\n    return (\n      <Link href={href} className={classes} {...props}>\n        {content}\n      </Link>\n    );\n  }\n\n  return (\n    <button\n      type={type}\n      className={classes}\n      disabled={disabled || loading}\n      onClick={onClick}\n      {...props}\n    >\n      {content}\n    </button>\n  );\n};\n\nexport default Button;\n"],"names":[],"mappings":";;;;;AAAA;AACA;;;;AAEA,MAAM,SAAS,CAAC,EACd,QAAQ,EACR,UAAU,SAAS,EACnB,OAAO,IAAI,EACX,WAAW,KAAK,EAChB,UAAU,KAAK,EACf,IAAI,EACJ,OAAO,EACP,OAAO,QAAQ,EACf,YAAY,EAAE,EACd,IAAI,EACJ,eAAe,MAAM,EACrB,YAAY,KAAK,EACjB,GAAG,OACJ;IACC,MAAM,cAAc;IAEpB,MAAM,WAAW;QACf,SAAS;QACT,WAAW;QACX,SAAS;QACT,QAAQ;QACR,SAAS;QACT,MAAM;QACN,SAAS;QACT,OAAO;IACT;IAEA,MAAM,QAAQ;QACZ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;IACN;IAEA,MAAM,UAAU;QACd;QACA,QAAQ,CAAC,QAAQ;QACjB,KAAK,CAAC,KAAK;QACX,YAAY,WAAW;QACvB;KACD,CAAC,MAAM,CAAC,SAAS,IAAI,CAAC;IAEvB,MAAM,wBACJ;;YACG,yBACC,8OAAC;gBAAI,WAAU;gBAAkC,MAAK;gBAAO,SAAQ;;kCACnE,8OAAC;wBAAO,WAAU;wBAAa,IAAG;wBAAK,IAAG;wBAAK,GAAE;wBAAK,QAAO;wBAAe,aAAY;;;;;;kCACxF,8OAAC;wBAAK,WAAU;wBAAa,MAAK;wBAAe,GAAE;;;;;;;;;;;;YAGtD,CAAC,WAAW,QAAQ,iBAAiB,wBACpC,8OAAC;gBAAK,WAAU;0BAAQ;;;;;;YAEzB;YACA,CAAC,WAAW,QAAQ,iBAAiB,yBACpC,8OAAC;gBAAK,WAAU;0BAAQ;;;;;;;;IAK9B,IAAI,MAAM;QACR,qBACE,8OAAC,uKAAI;YAAC,MAAM;YAAM,WAAW;YAAU,GAAG,KAAK;sBAC5C;;;;;;IAGP;IAEA,qBACE,8OAAC;QACC,MAAM;QACN,WAAW;QACX,UAAU,YAAY;QACtB,SAAS;QACR,GAAG,KAAK;kBAER;;;;;;AAGP;uCAEe","debugId":null}},
    {"offset": {"line": 546, "column": 0}, "map": {"version":3,"sources":["file:///Users/Anusha/Documents/Collectbot/imp/prima-erp/frontend/components/ui/Card.jsx"],"sourcesContent":["import { cn } from \"@/lib/utils\";\n\nconst Card = ({ children, className = \"\", padding = \"p-6\", ...props }) => {\n  const cardClasses = cn(\n    \"bg-white rounded-lg shadow-sm border border-gray-200\",\n    padding,\n    className\n  );\n\n  return (\n    <div className={cardClasses} {...props}>\n      {children}\n    </div>\n  );\n};\n\n// Card Header component\nCard.Header = ({ children, className = \"\", ...props }) => (\n  <div\n    className={cn(\"border-b border-gray-200 pb-4 mb-4\", className)}\n    {...props}>\n    {children}\n  </div>\n);\n\n// Card Title component\nCard.Title = ({ children, className = \"\", ...props }) => (\n  <h3\n    className={cn(\"text-lg font-semibold text-gray-900\", className)}\n    {...props}>\n    {children}\n  </h3>\n);\n\n// Card Content component\nCard.Content = ({ children, className = \"\", ...props }) => (\n  <div className={cn(\"\", className)} {...props}>\n    {children}\n  </div>\n);\n\n// Card Footer component\nCard.Footer = ({ children, className = \"\", ...props }) => (\n  <div\n    className={cn(\"border-t border-gray-200 pt-4 mt-4\", className)}\n    {...props}>\n    {children}\n  </div>\n);\n\nexport default Card;\n"],"names":[],"mappings":";;;;;AAAA;;;AAEA,MAAM,OAAO,CAAC,EAAE,QAAQ,EAAE,YAAY,EAAE,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO;IACnE,MAAM,cAAc,IAAA,8HAAE,EACpB,wDACA,SACA;IAGF,qBACE,8OAAC;QAAI,WAAW;QAAc,GAAG,KAAK;kBACnC;;;;;;AAGP;AAEA,wBAAwB;AACxB,KAAK,MAAM,GAAG,CAAC,EAAE,QAAQ,EAAE,YAAY,EAAE,EAAE,GAAG,OAAO,iBACnD,8OAAC;QACC,WAAW,IAAA,8HAAE,EAAC,sCAAsC;QACnD,GAAG,KAAK;kBACR;;;;;;AAIL,uBAAuB;AACvB,KAAK,KAAK,GAAG,CAAC,EAAE,QAAQ,EAAE,YAAY,EAAE,EAAE,GAAG,OAAO,iBAClD,8OAAC;QACC,WAAW,IAAA,8HAAE,EAAC,uCAAuC;QACpD,GAAG,KAAK;kBACR;;;;;;AAIL,yBAAyB;AACzB,KAAK,OAAO,GAAG,CAAC,EAAE,QAAQ,EAAE,YAAY,EAAE,EAAE,GAAG,OAAO,iBACpD,8OAAC;QAAI,WAAW,IAAA,8HAAE,EAAC,IAAI;QAAa,GAAG,KAAK;kBACzC;;;;;;AAIL,wBAAwB;AACxB,KAAK,MAAM,GAAG,CAAC,EAAE,QAAQ,EAAE,YAAY,EAAE,EAAE,GAAG,OAAO,iBACnD,8OAAC;QACC,WAAW,IAAA,8HAAE,EAAC,sCAAsC;QACnD,GAAG,KAAK;kBACR;;;;;;uCAIU","debugId":null}},
    {"offset": {"line": 611, "column": 0}, "map": {"version":3,"sources":["file:///Users/Anusha/Documents/Collectbot/imp/prima-erp/frontend/components/ui/Modal.jsx"],"sourcesContent":["\"use client\";\n\nimport { useEffect } from \"react\";\n\nconst Modal = ({\n  isOpen,\n  onClose,\n  title,\n  message,\n  children,\n  type = \"info\", // \"success\", \"error\", \"warning\", \"info\"\n  showCloseButton = true,\n  onConfirm,\n  confirmText = \"OK\",\n  cancelText = \"Cancel\",\n  showCancelButton = false,\n  size = \"md\", // \"sm\", \"md\", \"lg\"\n}) => {\n  useEffect(() => {\n    const handleEscape = (e) => {\n      if (e.key === \"Escape\") {\n        onClose();\n      }\n    };\n\n    if (isOpen) {\n      document.addEventListener(\"keydown\", handleEscape);\n      document.body.style.overflow = \"hidden\";\n    }\n\n    return () => {\n      document.removeEventListener(\"keydown\", handleEscape);\n      document.body.style.overflow = \"unset\";\n    };\n  }, [isOpen, onClose]);\n\n  if (!isOpen) return null;\n\n  const getTypeStyles = () => {\n    switch (type) {\n      case \"success\":\n        return {\n          icon: (\n            <svg\n              className=\"w-6 h-6\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              viewBox=\"0 0 24 24\">\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M5 13l4 4L19 7\"\n              />\n            </svg>\n          ),\n          iconBg: \"bg-green-100\",\n          iconColor: \"text-green-600\",\n          titleColor: \"text-green-800\",\n          borderColor: \"border-green-200\",\n        };\n      case \"error\":\n        return {\n          icon: (\n            <svg\n              className=\"w-6 h-6\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              viewBox=\"0 0 24 24\">\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M6 18L18 6M6 6l12 12\"\n              />\n            </svg>\n          ),\n          iconBg: \"bg-red-100\",\n          iconColor: \"text-red-600\",\n          titleColor: \"text-red-800\",\n          borderColor: \"border-red-200\",\n        };\n      case \"warning\":\n        return {\n          icon: (\n            <svg\n              className=\"w-6 h-6\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              viewBox=\"0 0 24 24\">\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z\"\n              />\n            </svg>\n          ),\n          iconBg: \"bg-yellow-100\",\n          iconColor: \"text-yellow-600\",\n          titleColor: \"text-yellow-800\",\n          borderColor: \"border-yellow-200\",\n        };\n      default:\n        return {\n          icon: (\n            <svg\n              className=\"w-6 h-6\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              viewBox=\"0 0 24 24\">\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n              />\n            </svg>\n          ),\n          iconBg: \"bg-blue-100\",\n          iconColor: \"text-blue-600\",\n          titleColor: \"text-blue-800\",\n          borderColor: \"border-blue-200\",\n        };\n    }\n  };\n\n  const getSizeClasses = () => {\n    switch (size) {\n      case \"sm\":\n        return \"max-w-md\";\n      case \"lg\":\n        return \"max-w-2xl\";\n      default:\n        return \"max-w-lg\";\n    }\n  };\n\n  const typeStyles = getTypeStyles();\n  const sizeClasses = getSizeClasses();\n\n  const handleConfirm = () => {\n    if (onConfirm) {\n      onConfirm();\n    }\n    onClose();\n  };\n\n  const handleCancel = () => {\n    onClose();\n  };\n\n  return (\n    <div className=\"fixed inset-0 z-50 overflow-y-auto\">\n      <div className=\"flex min-h-full items-end justify-center p-4 text-center sm:items-center sm:p-0\">\n        {/* Backdrop */}\n        <div\n          className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\"\n          onClick={onClose}\n        />\n\n        {/* Modal */}\n        <div\n          className={`relative transform overflow-hidden rounded-lg bg-white text-left shadow-xl transition-all sm:my-8 sm:w-full ${sizeClasses}`}>\n          <div className={`border-l-4 ${typeStyles.borderColor}`}>\n            <div className=\"px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\n              <div className=\"sm:flex sm:items-start\">\n                <div\n                  className={`mx-auto flex h-12 w-12 flex-shrink-0 items-center justify-center rounded-full sm:mx-0 sm:h-10 sm:w-10 ${typeStyles.iconBg}`}>\n                  <div className={typeStyles.iconColor}>{typeStyles.icon}</div>\n                </div>\n                <div className=\"mt-3 text-center sm:ml-4 sm:mt-0 sm:text-left w-full\">\n                  {title && (\n                    <h3\n                      className={`text-lg font-medium leading-6 ${typeStyles.titleColor} mb-4`}>\n                      {title}\n                    </h3>\n                  )}\n                  {children ? (\n                    <div className=\"mt-2\">{children}</div>\n                  ) : (\n                    <div className=\"mt-2\">\n                      <p className=\"text-sm text-gray-500\">{message}</p>\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n\n            {/* Actions - Only show if no children (custom content) */}\n            {!children && (\n              <div className=\"bg-gray-50 px-4 py-3 sm:flex sm:flex-row-reverse sm:px-6\">\n                <button\n                  type=\"button\"\n                  className={`inline-flex w-full justify-center rounded-md px-3 py-2 text-sm font-semibold text-white shadow-sm sm:ml-3 sm:w-auto ${\n                    type === \"success\"\n                      ? \"bg-green-600 hover:bg-green-500\"\n                      : type === \"error\"\n                      ? \"bg-red-600 hover:bg-red-500\"\n                      : type === \"warning\"\n                      ? \"bg-yellow-600 hover:bg-yellow-500\"\n                      : \"bg-blue-600 hover:bg-blue-500\"\n                  }`}\n                  onClick={handleConfirm}>\n                  {confirmText}\n                </button>\n                {showCancelButton && (\n                  <button\n                    type=\"button\"\n                    className=\"mt-3 inline-flex w-full justify-center rounded-md bg-white px-3 py-2 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50 sm:mt-0 sm:w-auto\"\n                    onClick={handleCancel}>\n                    {cancelText}\n                  </button>\n                )}\n                {showCloseButton && !showCancelButton && (\n                  <button\n                    type=\"button\"\n                    className=\"mt-3 inline-flex w-full justify-center rounded-md bg-white px-3 py-2 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50 sm:mt-0 sm:w-auto\"\n                    onClick={handleCancel}>\n                    Close\n                  </button>\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 934, "column": 0}, "map": {"version":3,"sources":["file:///Users/Anusha/Documents/Collectbot/imp/prima-erp/frontend/lib/companyUtils.js"],"sourcesContent":["// Utility functions for company management\n\nlet companiesCache = null;\nlet cacheTimestamp = null;\nconst CACHE_DURATION = 5 * 60 * 1000; // 5 minutes\n\nexport const getCompanies = async () => {\n  // Check if cache is valid\n  if (\n    companiesCache &&\n    cacheTimestamp &&\n    Date.now() - cacheTimestamp < CACHE_DURATION\n  ) {\n    return companiesCache;\n  }\n\n  try {\n    const response = await fetch(\"/api/companies\");\n    if (response.ok) {\n      const data = await response.json();\n      companiesCache = data.companies;\n      cacheTimestamp = Date.now();\n      return companiesCache;\n    }\n  } catch (error) {\n    console.error(\"Error fetching companies:\", error);\n  }\n\n  // Return default companies if API fails\n  return [\n    {\n      companyCode: \"PRIMA-SM\",\n      name: \"PRIMA Sales & Marketing\",\n      address: \"123 Business Street, City, State - 123456\",\n      gstNumber: \"12ABCDE1234F1Z5\",\n    },\n    {\n      companyCode: \"PRIMA-FT\",\n      name: \"PRIMA Food Trading\",\n      address: \"456 Trade Avenue, City, State - 123456\",\n      gstNumber: \"12ABCDE1234F1Z6\",\n    },\n    {\n      companyCode: \"PRIMA-EX\",\n      name: \"PRIMA Export\",\n      address: \"789 Export Road, City, State - 123456\",\n      gstNumber: \"12ABCDE1234F1Z7\",\n    },\n  ];\n};\n\nexport const getCompanyByCode = async (companyCode) => {\n  const companies = await getCompanies();\n  return companies.find((company) => company.companyCode === companyCode);\n};\n\nexport const getDefaultCompany = async () => {\n  const companies = await getCompanies();\n  return (\n    companies[0] ||\n    companies.find((company) => company.companyCode === \"PRIMA-SM\")\n  );\n};\n"],"names":[],"mappings":"AAAA,2CAA2C;;;;;;;;;AAE3C,IAAI,iBAAiB;AACrB,IAAI,iBAAiB;AACrB,MAAM,iBAAiB,IAAI,KAAK,MAAM,YAAY;AAE3C,MAAM,eAAe;IAC1B,0BAA0B;IAC1B,IACE,kBACA,kBACA,KAAK,GAAG,KAAK,iBAAiB,gBAC9B;QACA,OAAO;IACT;IAEA,IAAI;QACF,MAAM,WAAW,MAAM,MAAM;QAC7B,IAAI,SAAS,EAAE,EAAE;YACf,MAAM,OAAO,MAAM,SAAS,IAAI;YAChC,iBAAiB,KAAK,SAAS;YAC/B,iBAAiB,KAAK,GAAG;YACzB,OAAO;QACT;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,6BAA6B;IAC7C;IAEA,wCAAwC;IACxC,OAAO;QACL;YACE,aAAa;YACb,MAAM;YACN,SAAS;YACT,WAAW;QACb;QACA;YACE,aAAa;YACb,MAAM;YACN,SAAS;YACT,WAAW;QACb;QACA;YACE,aAAa;YACb,MAAM;YACN,SAAS;YACT,WAAW;QACb;KACD;AACH;AAEO,MAAM,mBAAmB,OAAO;IACrC,MAAM,YAAY,MAAM;IACxB,OAAO,UAAU,IAAI,CAAC,CAAC,UAAY,QAAQ,WAAW,KAAK;AAC7D;AAEO,MAAM,oBAAoB;IAC/B,MAAM,YAAY,MAAM;IACxB,OACE,SAAS,CAAC,EAAE,IACZ,UAAU,IAAI,CAAC,CAAC,UAAY,QAAQ,WAAW,KAAK;AAExD","debugId":null}},
    {"offset": {"line": 996, "column": 0}, "map": {"version":3,"sources":["file:///Users/Anusha/Documents/Collectbot/imp/prima-erp/frontend/components/PDFInvoice.jsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport html2canvas from \"html2canvas\";\nimport jsPDF from \"jspdf\";\nimport { formatCurrency } from \"@/lib/utils\";\nimport { getGSTBreakdown } from \"@/lib/calculations\";\nimport { getCompanyByCode, getDefaultCompany } from \"@/lib/companyUtils\";\n\nconst PDFInvoice = ({ sale, onClose }) => {\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [companyDetails, setCompanyDetails] = useState(null);\n  const pdfRef = useRef(null);\n\n  useEffect(() => {\n    // Fetch company details\n    const fetchCompanyDetails = async () => {\n      try {\n        const companyCode = sale?.companyId || \"PRIMA-SM\";\n        const company = await getCompanyByCode(companyCode);\n        setCompanyDetails(company);\n      } catch (error) {\n        console.error(\"Error fetching company details:\", error);\n        const defaultCompany = await getDefaultCompany();\n        setCompanyDetails(defaultCompany);\n      }\n    };\n\n    fetchCompanyDetails();\n  }, [sale]);\n\n  useEffect(() => {\n    // Auto-generate PDF when component mounts and company details are loaded\n    if (sale && companyDetails && !isGenerating) {\n      setIsGenerating(true);\n      setTimeout(() => {\n        generatePDF();\n      }, 1000); // Wait for component to render\n    }\n  }, [sale, companyDetails]);\n\n  const generatePDF = async () => {\n    if (!pdfRef.current || !sale) return;\n\n    try {\n      console.log(\"Starting PDF generation...\");\n\n      // Create canvas from the PDF content\n      const canvas = await html2canvas(pdfRef.current, {\n        scale: 2, // Higher quality\n        useCORS: true,\n        allowTaint: true,\n        backgroundColor: \"#ffffff\",\n        width: 794, // A4 width in pixels at 96 DPI\n        height: pdfRef.current.scrollHeight, // Use actual content height\n        logging: true, // Enable logging for debugging\n        removeContainer: false,\n        scrollX: 0,\n        scrollY: 0,\n        windowWidth: 794,\n        windowHeight: pdfRef.current.scrollHeight,\n        foreignObjectRendering: false,\n        imageTimeout: 15000,\n      });\n\n      console.log(\"Canvas created, generating PDF...\");\n\n      // Create PDF\n      const imgData = canvas.toDataURL(\"image/png\");\n      const pdf = new jsPDF(\"p\", \"mm\", \"a4\");\n\n      const imgWidth = 210; // A4 width in mm\n      const pageHeight = 295; // A4 height in mm\n      const imgHeight = (canvas.height * imgWidth) / canvas.width;\n      let heightLeft = imgHeight;\n\n      let position = 0;\n\n      // Add first page\n      pdf.addImage(imgData, \"PNG\", 0, position, imgWidth, imgHeight);\n      heightLeft -= pageHeight;\n\n      // Add additional pages if content is longer than one page\n      while (heightLeft >= 0) {\n        position = heightLeft - imgHeight;\n        pdf.addPage();\n        pdf.addImage(imgData, \"PNG\", 0, position, imgWidth, imgHeight);\n        heightLeft -= pageHeight;\n      }\n\n      console.log(\"PDF created, saving...\");\n\n      // Save the PDF\n      pdf.save(`Invoice-${sale.invoiceNumber}.pdf`);\n\n      console.log(\"PDF saved successfully\");\n      setIsGenerating(false);\n      if (onClose) onClose();\n    } catch (error) {\n      console.error(\"Error generating PDF:\", error);\n      alert(\"Failed to generate PDF. Please try again.\");\n      setIsGenerating(false);\n      if (onClose) onClose();\n    }\n  };\n\n  if (!sale) return null;\n\n  const gstBreakdown = getGSTBreakdown(sale.items);\n\n  return (\n    <div className=\"fixed inset-0 z-50 bg-white flex items-center justify-center\">\n      <div className=\"text-center\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4\"></div>\n        <p className=\"text-lg text-gray-700\">Generating PDF...</p>\n        <p className=\"text-sm text-gray-500 mt-2\">\n          Please wait while we prepare your invoice\n        </p>\n      </div>\n\n      {/* PDF Content for Generation */}\n      <div\n        ref={pdfRef}\n        className=\"bg-white p-8 border border-gray-300 text-black\"\n        style={{\n          position: \"absolute\",\n          left: \"0\",\n          top: \"0\",\n          width: \"794px\",\n          fontFamily: \"Arial, sans-serif\",\n          fontSize: \"12px\",\n          lineHeight: \"1.4\",\n          color: \"#000000\",\n          visibility: \"visible\",\n          display: \"block\",\n          zIndex: \"9999\",\n        }}>\n        {/* Invoice Header */}\n        <div className=\"border-b-2 border-gray-300 pb-6 mb-6\">\n          <div className=\"flex justify-between items-start\">\n            <div>\n              <h1 className=\"text-3xl font-bold text-black mb-2\">\n                TAX INVOICE\n              </h1>\n              <div className=\"text-sm text-black\">\n                <p className=\"text-black\">\n                  <strong>Invoice No:</strong> {sale.invoiceNumber}\n                </p>\n                <p className=\"text-black\">\n                  <strong>Date:</strong>{\" \"}\n                  {sale.invoiceDate\n                    ? new Date(sale.invoiceDate).toLocaleDateString()\n                    : \"Invalid Date\"}\n                </p>\n              </div>\n            </div>\n            <div className=\"text-right\">\n              <h2 className=\"text-xl font-bold text-black mb-2 max-w-xs break-words\">\n                {companyDetails?.name || \"Prima Sales & Marketing Pvt Ltd\"}\n              </h2>\n              <div className=\"text-sm text-black\">\n                <p className=\"max-w-xs break-words\">\n                  {companyDetails?.address ||\n                    \"123 Business Street, City, State - 123456\"}\n                </p>\n                <p className=\"text-black\">\n                  GSTIN: {companyDetails?.gstNumber || \"12ABCDE1234F1Z5\"}\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Customer and Invoice Details */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8 mb-6\">\n          {/* Bill To */}\n          <div>\n            <h3 className=\"text-lg font-bold text-black mb-3 border-b border-gray-300 pb-1\">\n              Bill To:\n            </h3>\n            <div className=\"text-sm text-black\">\n              <p className=\"font-semibold text-black\">\n                {sale.customerDetails?.shopName}\n              </p>\n              <p className=\"text-black\">{sale.customerDetails?.name}</p>\n              <p className=\"text-black\">{sale.customerDetails?.phone}</p>\n              <p className=\"whitespace-pre-line text-black max-w-xs break-words\">\n                {sale.customerDetails?.address}\n              </p>\n            </div>\n          </div>\n\n          {/* Invoice Summary */}\n          <div>\n            <h3 className=\"text-lg font-bold text-black mb-3 border-b border-gray-300 pb-1\">\n              Invoice Summary:\n            </h3>\n            <div className=\"text-sm space-y-1 text-black\">\n              <div className=\"flex justify-between text-black\">\n                <span className=\"text-black\">Subtotal:</span>\n                <span className=\"text-black\">\n                  {formatCurrency(sale.subtotal)}\n                </span>\n              </div>\n              <div className=\"flex justify-between text-black\">\n                <span className=\"text-black\">Total GST:</span>\n                <span className=\"text-black\">\n                  {formatCurrency(sale.totalGST)}\n                </span>\n              </div>\n              <div className=\"flex justify-between text-black\">\n                <span className=\"text-black\">Invoice Value:</span>\n                <span className=\"text-black\">\n                  {formatCurrency(sale.invoiceValue)}\n                </span>\n              </div>\n              {sale.discount > 0 && (\n                <div className=\"flex justify-between text-black\">\n                  <span className=\"text-black\">Discount:</span>\n                  <span className=\"text-black\">\n                    -{formatCurrency(sale.discount)}\n                  </span>\n                </div>\n              )}\n              <div className=\"flex justify-between font-bold text-lg border-t pt-1 text-black\">\n                <span className=\"text-black\">Final Amount:</span>\n                <span className=\"text-black\">\n                  {formatCurrency(sale.finalAmount)}\n                </span>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Items Table */}\n        <div className=\"mb-6\">\n          <h3 className=\"text-lg font-bold text-black mb-3 border-b border-gray-300 pb-1\">\n            Item Details:\n          </h3>\n          <table className=\"w-full border-collapse border border-gray-300\">\n            <thead>\n              <tr className=\"bg-gray-100\">\n                <th className=\"border border-gray-300 px-3 py-2 text-left text-sm font-bold text-black\">\n                  S.No\n                </th>\n                <th className=\"border border-gray-300 px-3 py-2 text-left text-sm font-bold text-black\">\n                  Product Description\n                </th>\n                <th className=\"border border-gray-300 px-3 py-2 text-center text-sm font-bold text-black\">\n                  HSN Code\n                </th>\n                <th className=\"border border-gray-300 px-3 py-2 text-center text-sm font-bold text-black\">\n                  Qty\n                </th>\n                <th className=\"border border-gray-300 px-3 py-2 text-center text-sm font-bold text-black\">\n                  Unit\n                </th>\n                <th className=\"border border-gray-300 px-3 py-2 text-right text-sm font-bold text-black\">\n                  Rate (₹)\n                </th>\n                <th className=\"border border-gray-300 px-3 py-2 text-right text-sm font-bold text-black\">\n                  Amount (₹)\n                </th>\n                <th className=\"border border-gray-300 px-3 py-2 text-right text-sm font-bold text-black\">\n                  GST ({sale.items[0]?.gstRate || 5}%)\n                </th>\n                <th className=\"border border-gray-300 px-3 py-2 text-right text-sm font-bold text-black\">\n                  Total (₹)\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {sale.items.map((item, index) => (\n                <tr key={index}>\n                  <td className=\"border border-gray-300 px-3 py-2 text-sm text-black\">\n                    {index + 1}\n                  </td>\n                  <td className=\"border border-gray-300 px-3 py-2 text-sm text-black max-w-xs break-words\">\n                    {item.product}\n                  </td>\n                  <td className=\"border border-gray-300 px-3 py-2 text-sm text-center text-black\">\n                    {item.hsnCode || \"-\"}\n                  </td>\n                  <td className=\"border border-gray-300 px-3 py-2 text-sm text-center text-black\">\n                    {item.qty}\n                  </td>\n                  <td className=\"border border-gray-300 px-3 py-2 text-sm text-center text-black\">\n                    {item.unit || \"-\"}\n                  </td>\n                  <td className=\"border border-gray-300 px-3 py-2 text-sm text-right text-black\">\n                    {formatCurrency(item.rate)}\n                  </td>\n                  <td className=\"border border-gray-300 px-3 py-2 text-sm text-right text-black\">\n                    {formatCurrency(item.taxableValue)}\n                  </td>\n                  <td className=\"border border-gray-300 px-3 py-2 text-sm text-right text-black\">\n                    {formatCurrency(item.gst)}\n                  </td>\n                  <td className=\"border border-gray-300 px-3 py-2 text-sm text-right font-medium text-black\">\n                    {formatCurrency(item.invoiceValue)}\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n\n        {/* GST Breakdown */}\n        {Object.keys(gstBreakdown).length > 0 && (\n          <div className=\"mb-6\">\n            <h3 className=\"text-lg font-bold text-black mb-3 border-b border-gray-300 pb-1\">\n              GST Breakdown:\n            </h3>\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n              {Object.entries(gstBreakdown).map(([rate, data]) => (\n                <div key={rate} className=\"border border-gray-300 p-3\">\n                  <div className=\"text-sm font-bold text-black\">\n                    {rate}% GST\n                  </div>\n                  <div className=\"text-xs text-black\">\n                    Taxable: {formatCurrency(data.taxableAmount)}\n                  </div>\n                  <div className=\"text-sm font-medium text-black\">\n                    Tax: {formatCurrency(data.gstAmount)}\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n\n        {/* Terms and Conditions */}\n        <div className=\"mb-6\">\n          <h3 className=\"text-lg font-bold text-black mb-3 border-b border-gray-300 pb-1\">\n            Terms & Conditions:\n          </h3>\n          <div className=\"text-sm text-black space-y-1\">\n            <p className=\"text-black\">\n              • Payment is due within 30 days of invoice date\n            </p>\n            <p className=\"text-black\">\n              • Goods once sold will not be taken back\n            </p>\n            <p className=\"text-black\">\n              • Interest will be charged on overdue payments\n            </p>\n            <p className=\"text-black\">• Subject to local jurisdiction</p>\n          </div>\n        </div>\n\n        {/* Footer */}\n        <div className=\"grid grid-cols-2 gap-8 mt-8\">\n          <div className=\"text-center\">\n            <div className=\"border-t-2 border-gray-300 pt-4\">\n              <p className=\"text-sm font-bold text-black\">Customer Signature</p>\n            </div>\n          </div>\n          <div className=\"text-center\">\n            <div className=\"border-t-2 border-gray-300 pt-4\">\n              <p className=\"text-sm font-bold text-black\">\n                Authorized Signature\n              </p>\n            </div>\n          </div>\n        </div>\n\n        {/* Notes */}\n        {sale?.notes && (\n          <div className=\"mt-6 p-4 bg-gray-50 border border-gray-300\">\n            <h4 className=\"font-bold text-black mb-2\">Notes:</h4>\n            <p className=\"text-sm text-black\">{sale.notes}</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default PDFInvoice;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1919, "column": 0}, "map": {"version":3,"sources":["file:///Users/Anusha/Documents/Collectbot/imp/prima-erp/frontend/app/dashboard/sales/%5Bid%5D/page.jsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport { use } from \"react\";\nimport { getGSTBreakdown } from \"@/lib/calculations\";\nimport { formatCurrency } from \"@/lib/utils\";\nimport Button from \"@/components/ui/Button\";\nimport Card from \"@/components/ui/Card\";\nimport Modal from \"@/components/ui/Modal\";\nimport PDFInvoice from \"@/components/PDFInvoice\";\n\nconst ViewInvoicePage = ({ params }) => {\n  const router = useRouter();\n  const [sale, setSale] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const [deleting, setDeleting] = useState(false);\n  const [updatingStatus, setUpdatingStatus] = useState(false);\n  const [paymentStatus, setPaymentStatus] = useState(\"\");\n  const [paymentMode, setPaymentMode] = useState(\"\");\n  const [amountPaid, setAmountPaid] = useState(\"\");\n  const [deliveryStatus, setDeliveryStatus] = useState(\"\");\n  const [showPDFInvoice, setShowPDFInvoice] = useState(false);\n\n  // Unwrap params for Next.js 15 compatibility\n  const unwrappedParams = use(params);\n  const saleId = unwrappedParams.id;\n\n  // Fetch sale details\n  const fetchSale = async () => {\n    setLoading(true);\n    try {\n      const response = await fetch(`/api/sales/${saleId}`);\n      if (response.ok) {\n        const data = await response.json();\n        setSale(data.sale);\n      } else {\n        console.error(\"Failed to fetch sale\");\n        router.push(\"/dashboard/sales\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching sale:\", error);\n      router.push(\"/dashboard/sales\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchSale();\n  }, [saleId]);\n\n  // Set status values when sale data is loaded\n  useEffect(() => {\n    if (sale) {\n      console.log(\"Sale data loaded:\", {\n        paymentStatus: sale.paymentStatus,\n        paymentMode: sale.paymentMode,\n        amountPaid: sale.amountPaid,\n        finalAmount: sale.finalAmount,\n        total: sale.total,\n        allKeys: Object.keys(sale),\n      });\n\n      const paymentStatus = sale.paymentStatus || \"Pending\";\n      setPaymentStatus(paymentStatus);\n      setDeliveryStatus(sale.deliveryStatus || \"Pending\");\n\n      // Auto-fill payment mode and amount based on existing status\n      if (paymentStatus === \"Paid\") {\n        const amountToSet = sale.amountPaid\n          ? sale.amountPaid.toString()\n          : (sale.finalAmount || sale.total || 0).toString();\n        console.log(\"Setting Paid status - amountPaid:\", amountToSet);\n        setPaymentMode(sale.paymentMode || \"Cash\");\n        setAmountPaid(amountToSet);\n      } else if (paymentStatus === \"Partial\") {\n        console.log(\"Setting Partial status\");\n        setPaymentMode(sale.paymentMode || \"Cash\");\n        // For Partial status, if no amount is saved, suggest half the total amount\n        if (sale.amountPaid) {\n          setAmountPaid(sale.amountPaid.toString());\n        } else {\n          const suggestedAmount = Math.floor(\n            (sale.finalAmount || sale.total || 0) / 2\n          );\n          setAmountPaid(suggestedAmount.toString());\n          console.log(\n            \"No saved amount for Partial status, suggesting:\",\n            suggestedAmount\n          );\n        }\n      } else {\n        console.log(\"Setting Pending status\");\n        setPaymentMode(sale.paymentMode || \"\");\n        setAmountPaid(sale.amountPaid ? sale.amountPaid.toString() : \"\");\n      }\n    }\n  }, [sale]);\n\n  // Handle status update\n  const handleStatusUpdate = async () => {\n    // Validate required fields\n    if (paymentStatus === \"Partial\" || paymentStatus === \"Paid\") {\n      if (!paymentMode) {\n        alert(\"Please select a payment mode\");\n        return;\n      }\n      if (!amountPaid || amountPaid <= 0) {\n        alert(\"Please enter a valid amount paid\");\n        return;\n      }\n\n      const amountPaidNum = parseFloat(amountPaid);\n      if (paymentStatus === \"Partial\" && amountPaidNum >= sale.finalAmount) {\n        alert(\n          \"For partial payment, amount paid must be less than the total amount\"\n        );\n        return;\n      }\n      if (paymentStatus === \"Paid\" && amountPaidNum !== sale.finalAmount) {\n        alert(\"For paid status, amount paid must equal the total amount\");\n        return;\n      }\n    }\n\n    setUpdatingStatus(true);\n    try {\n      const response = await fetch(`/api/sales/${saleId}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          paymentStatus,\n          paymentMode,\n          amountPaid: amountPaid ? parseFloat(amountPaid) : undefined,\n          deliveryStatus,\n        }),\n      });\n\n      if (response.ok) {\n        // Refresh sale data\n        await fetchSale();\n        alert(\"Status updated successfully!\");\n      } else {\n        const error = await response.json();\n        console.error(\"Status update error:\", error);\n        alert(\n          error.message || error.errors?.join(\", \") || \"Failed to update status\"\n        );\n      }\n    } catch (error) {\n      console.error(\"Error updating status:\", error);\n      alert(\"Failed to update status\");\n    } finally {\n      setUpdatingStatus(false);\n    }\n  };\n\n  // Handle delete\n  const handleDelete = async () => {\n    setDeleting(true);\n    try {\n      const response = await fetch(`/api/sales/${saleId}`, {\n        method: \"DELETE\",\n      });\n\n      if (response.ok) {\n        router.push(\"/dashboard/sales\");\n      } else {\n        const error = await response.json();\n        alert(error.message || \"Failed to delete invoice\");\n      }\n    } catch (error) {\n      console.error(\"Error deleting sale:\", error);\n      alert(\"Failed to delete invoice\");\n    } finally {\n      setDeleting(false);\n      setShowDeleteModal(false);\n    }\n  };\n\n  // Handle PDF download\n  const handlePDFDownload = () => {\n    setShowPDFInvoice(true);\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center min-h-64\">\n        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n      </div>\n    );\n  }\n\n  if (!sale) {\n    return (\n      <div className=\"text-center py-12\">\n        <h2 className=\"text-xl font-semibold text-gray-900\">\n          Invoice not found\n        </h2>\n        <p className=\"mt-2 text-gray-600\">\n          The invoice you're looking for doesn't exist.\n        </p>\n        <Button\n          onClick={() => router.push(\"/dashboard/sales\")}\n          className=\"mt-4\">\n          Back to Sales\n        </Button>\n      </div>\n    );\n  }\n\n  const gstBreakdown = getGSTBreakdown(sale.items);\n\n  // Debug logging\n  console.log(\"Sale data for invoice:\", {\n    invoiceNumber: sale.invoiceNumber,\n    invoiceDate: sale.invoiceDate,\n    subtotal: sale.subtotal,\n    totalGST: sale.totalGST,\n    finalAmount: sale.finalAmount,\n    customer: sale.customer,\n    items: sale.items,\n  });\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between\">\n        <div>\n          <h1 className=\"text-2xl font-bold text-gray-900\">\n            Invoice #{sale.invoiceNumber}\n          </h1>\n          <p className=\"mt-1 text-sm text-gray-600\">\n            Created on{\" \"}\n            {sale.invoiceDate\n              ? new Date(sale.invoiceDate).toLocaleDateString(\"en-IN\")\n              : \"Invalid Date\"}\n          </p>\n        </div>\n        <div className=\"mt-4 sm:mt-0 flex space-x-2 no-print\">\n          <Button\n            variant=\"outline\"\n            onClick={handlePDFDownload}\n            className=\"pdf-button\">\n            Download PDF\n          </Button>\n          <Button\n            variant=\"outline\"\n            onClick={() => router.push(`/dashboard/sales/edit/${sale.id}`)}\n            className=\"edit-button\">\n            Edit\n          </Button>\n          <Button\n            variant=\"outline\"\n            onClick={() => setShowDeleteModal(true)}\n            className=\"delete-button text-red-600 hover:text-red-700\">\n            Delete\n          </Button>\n        </div>\n      </div>\n\n      {/* Invoice Details */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n        {/* Customer Information */}\n        <Card>\n          <Card.Header>\n            <Card.Title>Customer Information</Card.Title>\n          </Card.Header>\n          <Card.Content>\n            <div className=\"space-y-2\">\n              <div>\n                <span className=\"text-sm font-medium text-gray-500\">\n                  Shop Name:\n                </span>\n                <p className=\"text-gray-900\">{sale.customer?.shopName}</p>\n              </div>\n              <div>\n                <span className=\"text-sm font-medium text-gray-500\">\n                  Contact Person:\n                </span>\n                <p className=\"text-gray-900\">{sale.customer?.name}</p>\n              </div>\n              <div>\n                <span className=\"text-sm font-medium text-gray-500\">\n                  Phone:\n                </span>\n                <p className=\"text-gray-900\">{sale.customer?.phoneNumber}</p>\n              </div>\n              <div>\n                <span className=\"text-sm font-medium text-gray-500\">\n                  Address:\n                </span>\n                <p className=\"text-gray-900\">{sale.customer?.address}</p>\n              </div>\n            </div>\n          </Card.Content>\n        </Card>\n\n        {/* Invoice Summary */}\n        <Card>\n          <Card.Header>\n            <Card.Title>Invoice Summary</Card.Title>\n          </Card.Header>\n          <Card.Content>\n            <div className=\"space-y-2\">\n              <div className=\"flex justify-between\">\n                <span className=\"text-gray-600\">Subtotal:</span>\n                <span className=\"font-medium text-gray-500\">\n                  {formatCurrency(sale.subtotal || 0)}\n                </span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span className=\"text-gray-600\">Total GST:</span>\n                <span className=\"font-medium text-gray-500\">\n                  {formatCurrency(sale.totalGST || 0)}\n                </span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span className=\"text-gray-600\">Invoice Value:</span>\n                <span className=\"font-medium text-gray-500\">\n                  {formatCurrency(sale.subtotal + sale.totalGST || 0)}\n                </span>\n              </div>\n              {sale.discount > 0 && (\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600\">Discount:</span>\n                  <span className=\"font-medium text-gray-500\">\n                    -{formatCurrency(sale.discount)}\n                  </span>\n                </div>\n              )}\n              <div className=\"border-t pt-2\">\n                <div className=\"flex justify-between text-lg font-bold\">\n                  <span className=\"text-gray-600\">Final Amount:</span>\n                  <span className=\"font-medium text-red-600\">\n                    {formatCurrency(sale.finalAmount)}\n                  </span>\n                </div>\n              </div>\n\n              {/* Payment Information */}\n              {sale.paymentStatus !== \"Pending\" && (\n                <div className=\"border-t pt-2 mt-2\">\n                  <div className=\"text-sm text-gray-600 mb-1\">\n                    Payment Information:\n                  </div>\n                  <div className=\"flex justify-between text-sm\">\n                    <span className=\"text-gray-600\">Status:</span>\n                    <span\n                      className={`font-medium ${\n                        sale.paymentStatus === \"Paid\"\n                          ? \"text-green-600\"\n                          : \"text-blue-600\"\n                      }`}>\n                      {sale.paymentStatus}\n                    </span>\n                  </div>\n                  {sale.paymentMode && (\n                    <div className=\"flex justify-between text-sm\">\n                      <span className=\"text-gray-600\">Mode:</span>\n                      <span className=\"font-medium text-gray-900\">\n                        {sale.paymentMode}\n                      </span>\n                    </div>\n                  )}\n                  {sale.amountPaid && (\n                    <div className=\"flex justify-between text-sm\">\n                      <span className=\"text-gray-600\">Amount Paid:</span>\n                      <span className=\"font-medium text-green-600\">\n                        {formatCurrency(sale.amountPaid)}\n                      </span>\n                    </div>\n                  )}\n                  {sale.paymentStatus === \"Partial\" && sale.amountPaid && (\n                    <div className=\"flex justify-between text-sm\">\n                      <span className=\"text-gray-600\">Balance:</span>\n                      <span className=\"font-medium text-orange-600\">\n                        {formatCurrency(sale.finalAmount - sale.amountPaid)}\n                      </span>\n                    </div>\n                  )}\n                </div>\n              )}\n            </div>\n          </Card.Content>\n        </Card>\n\n        {/* Status Information */}\n        <Card>\n          <Card.Header>\n            <Card.Title>Status</Card.Title>\n          </Card.Header>\n          <Card.Content>\n            <div className=\"space-y-4\">\n              <div>\n                <label className=\"text-sm font-medium text-gray-500 block mb-1\">\n                  Payment Status:\n                </label>\n                <div className=\"mb-2\">\n                  <span\n                    className={`px-2 py-1 text-xs font-medium rounded-full ${\n                      sale.paymentStatus === \"Paid\"\n                        ? \"bg-green-100 text-green-800\"\n                        : sale.paymentStatus === \"Partial\"\n                        ? \"bg-blue-100 text-blue-800\"\n                        : \"bg-yellow-100 text-yellow-800\"\n                    }`}>\n                    Current: {sale.paymentStatus}\n                  </span>\n                  {paymentStatus !== sale.paymentStatus && (\n                    <span className=\"ml-2 text-xs text-blue-600\">\n                      (Modified)\n                    </span>\n                  )}\n                </div>\n                <select\n                  value={paymentStatus}\n                  onChange={(e) => {\n                    const newStatus = e.target.value;\n                    console.log(\n                      \"Payment status changed to:\",\n                      newStatus,\n                      \"sale.finalAmount:\",\n                      sale?.finalAmount\n                    );\n                    setPaymentStatus(newStatus);\n                    // Auto-fill amount paid and payment mode based on status\n                    if (newStatus === \"Paid\" && sale) {\n                      console.log(\n                        \"Auto-filling Paid status with amount:\",\n                        sale.finalAmount\n                      );\n                      setAmountPaid(sale.finalAmount.toString());\n                      setPaymentMode(\"Cash\"); // Default to Cash for Paid status\n                    } else if (newStatus === \"Partial\") {\n                      console.log(\"Auto-filling Partial status\");\n                      // For Partial status, suggest half the total amount\n                      const suggestedAmount = Math.floor(\n                        (sale.finalAmount || sale.total || 0) / 2\n                      );\n                      setAmountPaid(suggestedAmount.toString());\n                      setPaymentMode(\"Cash\"); // Default to Cash for Partial status\n                    } else if (newStatus === \"Pending\") {\n                      console.log(\"Clearing fields for Pending status\");\n                      setAmountPaid(\"\");\n                      setPaymentMode(\"\");\n                    }\n                  }}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent text-gray-900 bg-white\">\n                  <option value=\"Pending\">Pending</option>\n                  <option value=\"Partial\">Partial</option>\n                  <option value=\"Paid\">Paid</option>\n                </select>\n              </div>\n\n              {/* Payment Mode - Only show if status is Partial or Paid */}\n              {(paymentStatus === \"Partial\" || paymentStatus === \"Paid\") && (\n                <div>\n                  <label className=\"text-sm font-medium text-gray-500 block mb-1\">\n                    Payment Mode:\n                  </label>\n                  <div className=\"mb-2\">\n                    {sale.paymentMode && (\n                      <span className=\"px-2 py-1 text-xs font-medium rounded-full bg-gray-100 text-gray-800\">\n                        Current: {sale.paymentMode}\n                      </span>\n                    )}\n                    {paymentMode !== sale.paymentMode && paymentMode && (\n                      <span className=\"ml-2 text-xs text-blue-600\">\n                        (Modified)\n                      </span>\n                    )}\n                  </div>\n                  <select\n                    value={paymentMode}\n                    onChange={(e) => setPaymentMode(e.target.value)}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent text-gray-900 bg-white\">\n                    <option value=\"\">Select Payment Mode</option>\n                    <option value=\"Cash\">Cash</option>\n                    <option value=\"Online\">Online</option>\n                  </select>\n                </div>\n              )}\n\n              {/* Amount Paid - Only show if status is Partial or Paid */}\n              {(paymentStatus === \"Partial\" || paymentStatus === \"Paid\") && (\n                <div>\n                  <label className=\"text-sm font-medium text-gray-500 block mb-1\">\n                    Amount Paid (₹):\n                  </label>\n                  <div className=\"mb-2\">\n                    {sale.amountPaid && (\n                      <span className=\"px-2 py-1 text-xs font-medium rounded-full bg-gray-100 text-gray-800\">\n                        Current: ₹{sale.amountPaid}\n                      </span>\n                    )}\n                    {amountPaid !==\n                      (sale.amountPaid ? sale.amountPaid.toString() : \"\") &&\n                      amountPaid && (\n                        <span className=\"ml-2 text-xs text-blue-600\">\n                          (Modified)\n                        </span>\n                      )}\n                  </div>\n                  <input\n                    type=\"number\"\n                    value={amountPaid}\n                    onChange={(e) => setAmountPaid(e.target.value)}\n                    placeholder={\n                      paymentStatus === \"Paid\"\n                        ? `₹${sale.finalAmount}`\n                        : \"Enter amount\"\n                    }\n                    min=\"0\"\n                    max={\n                      paymentStatus === \"Paid\"\n                        ? sale.finalAmount\n                        : sale.finalAmount - 0.01\n                    }\n                    step=\"0.01\"\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent text-gray-900 bg-white\"\n                  />\n                  {paymentStatus === \"Partial\" && (\n                    <p className=\"text-xs text-gray-500 mt-1\">\n                      Must be less than ₹{sale.finalAmount}\n                    </p>\n                  )}\n                  {paymentStatus === \"Paid\" && (\n                    <p className=\"text-xs text-gray-500 mt-1\">\n                      Must equal ₹{sale.finalAmount}\n                    </p>\n                  )}\n                </div>\n              )}\n              <div>\n                <label className=\"text-sm font-medium text-gray-500 block mb-1\">\n                  Delivery Status:\n                </label>\n                <div className=\"mb-2\">\n                  <span\n                    className={`px-2 py-1 text-xs font-medium rounded-full ${\n                      sale.deliveryStatus === \"Delivered\"\n                        ? \"bg-green-100 text-green-800\"\n                        : sale.deliveryStatus === \"Cancelled\"\n                        ? \"bg-red-100 text-red-800\"\n                        : \"bg-yellow-100 text-yellow-800\"\n                    }`}>\n                    Current: {sale.deliveryStatus}\n                  </span>\n                  {deliveryStatus !== sale.deliveryStatus && (\n                    <span className=\"ml-2 text-xs text-blue-600\">\n                      (Modified)\n                    </span>\n                  )}\n                </div>\n                <select\n                  value={deliveryStatus}\n                  onChange={(e) => setDeliveryStatus(e.target.value)}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent text-gray-900 bg-white\">\n                  <option value=\"Pending\">Pending</option>\n                  <option value=\"Delivered\">Delivered</option>\n                  <option value=\"Cancelled\">Cancelled</option>\n                </select>\n              </div>\n              <Button\n                onClick={handleStatusUpdate}\n                disabled={\n                  updatingStatus ||\n                  (paymentStatus === sale.paymentStatus &&\n                    paymentMode === sale.paymentMode &&\n                    amountPaid ===\n                      (sale.amountPaid ? sale.amountPaid.toString() : \"\") &&\n                    deliveryStatus === sale.deliveryStatus) ||\n                  ((paymentStatus === \"Partial\" || paymentStatus === \"Paid\") &&\n                    (!paymentMode || !amountPaid || amountPaid <= 0))\n                }\n                className=\"w-full\">\n                {updatingStatus\n                  ? \"Updating...\"\n                  : paymentStatus === sale.paymentStatus &&\n                    paymentMode === sale.paymentMode &&\n                    amountPaid ===\n                      (sale.amountPaid ? sale.amountPaid.toString() : \"\") &&\n                    deliveryStatus === sale.deliveryStatus\n                  ? \"No Changes\"\n                  : \"Update Status\"}\n              </Button>\n              {sale?.notes && (\n                <div>\n                  <span className=\"text-sm font-medium text-gray-500\">\n                    Notes:\n                  </span>\n                  <p className=\"mt-1 text-sm text-gray-900\">{sale.notes}</p>\n                </div>\n              )}\n            </div>\n          </Card.Content>\n        </Card>\n      </div>\n\n      {/* Items Table */}\n      <Card>\n        <Card.Header>\n          <Card.Title>Invoice Items</Card.Title>\n        </Card.Header>\n        <Card.Content>\n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full divide-y divide-gray-200\">\n              <thead className=\"bg-gray-50\">\n                <tr>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Product\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    HSN Code\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Quantity\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Unit\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Rate (₹)\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Amount (₹)\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    GST ({sale.items[0]?.gstRate || 5}%)\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Total (₹)\n                  </th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-white divide-y divide-gray-200\">\n                {sale.items.map((item, index) => (\n                  <tr key={index}>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n                      {item.product}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                      {item.hsnCode || \"-\"}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                      {item.qty}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                      {item.unit || \"-\"}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                      {formatCurrency(item.rate)}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                      {formatCurrency(item.taxableValue)}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                      {formatCurrency(item.gst)}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n                      {formatCurrency(item.invoiceValue)}\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </Card.Content>\n      </Card>\n\n      {/* GST Breakdown */}\n      {Object.keys(gstBreakdown).length > 0 && (\n        <Card>\n          <Card.Header>\n            <Card.Title>GST Breakdown</Card.Title>\n          </Card.Header>\n          <Card.Content>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n              {Object.entries(gstBreakdown).map(([rate, data]) => (\n                <div key={rate} className=\"p-3 bg-gray-50 rounded-lg\">\n                  <div className=\"text-sm font-medium text-gray-900\">\n                    {rate}% GST\n                  </div>\n                  <div className=\"text-xs text-gray-600\">\n                    Taxable: {formatCurrency(data.taxableAmount)}\n                  </div>\n                  <div className=\"text-sm font-medium text-gray-900\">\n                    Tax: {formatCurrency(data.gstAmount)}\n                  </div>\n                </div>\n              ))}\n            </div>\n          </Card.Content>\n        </Card>\n      )}\n\n      {/* Delete Confirmation Modal */}\n      <Modal\n        isOpen={showDeleteModal}\n        onClose={() => setShowDeleteModal(false)}\n        title=\"Delete Invoice\"\n        size=\"sm\">\n        <div className=\"space-y-4\">\n          <p className=\"text-gray-600\">\n            Are you sure you want to delete this invoice? This action cannot be\n            undone.\n          </p>\n          <div className=\"flex justify-end space-x-3\">\n            <Button\n              variant=\"outline\"\n              onClick={() => setShowDeleteModal(false)}\n              disabled={deleting}>\n              Cancel\n            </Button>\n            <Button\n              onClick={handleDelete}\n              disabled={deleting}\n              className=\"bg-red-600 hover:bg-red-700\">\n              {deleting ? \"Deleting...\" : \"Delete\"}\n            </Button>\n          </div>\n        </div>\n      </Modal>\n\n      {/* PDF Invoice Component */}\n      {showPDFInvoice && (\n        <PDFInvoice sale={sale} onClose={() => setShowPDFInvoice(false)} />\n      )}\n    </div>\n  );\n};\n\nexport default ViewInvoicePage;\n"],"names":[],"mappings":"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","debugId":null}}]
}